<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.6-dev.66.d284ecaae" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="mjrty.ml"/>
<theory name="Mjrty" proved="true">
 <goal name="numof&#39;vc" expl="VC for numof" proved="true">
 <proof prover="0"><result status="valid" time="0.024861" steps="14"/></proof>
 </goal>
 <goal name="numof_bounds" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="numof_bounds.0" proved="true">
  <transf name="induction" proved="true" arg1="b" arg2="from" arg3="a">
   <goal name="numof_bounds.0.0" expl="base case" proved="true">
   <proof prover="0"><result status="valid" time="0.021893" steps="14"/></proof>
   </goal>
   <goal name="numof_bounds.0.1" expl="recursive case" proved="true">
   <proof prover="0"><result status="valid" time="0.034104" steps="103"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="numof_bounds.1" proved="true">
  <transf name="induction" proved="true" arg1="b" arg2="from" arg3="a">
   <goal name="numof_bounds.1.0" expl="base case" proved="true">
   <proof prover="0"><result status="valid" time="0.022087" steps="14"/></proof>
   </goal>
   <goal name="numof_bounds.1.1" expl="recursive case" proved="true">
   <proof prover="0"><result status="valid" time="0.030785" steps="101"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numof_append" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="numof_append.0" proved="true">
  <transf name="induction" proved="true" arg1="c" arg2="from" arg3="a">
   <goal name="numof_append.0.0" expl="base case" proved="true">
   <proof prover="0"><result status="valid" time="0.032577" steps="73"/></proof>
   </goal>
   <goal name="numof_append.0.1" expl="recursive case" proved="true">
   <proof prover="0"><result status="valid" time="0.042307" steps="244"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numof_left_no_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="numof_left_no_add.0" proved="true">
  <transf name="instantiate" proved="true" arg1="numof_append" arg2="p,a">
   <goal name="numof_left_no_add.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.036659" steps="159"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="numof_left_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="numof_left_add.0" proved="true">
  <transf name="instantiate" proved="true" arg1="numof_append" arg2="p,a">
   <goal name="numof_left_add.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.043124" steps="259"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Mjrty.mjrty&#39;vc" expl="VC for mjrty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mjrty&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.022006" steps="14"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.029411" steps="66"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.034333" steps="67"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.036737" steps="94"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.025450" steps="27"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.091578" steps="891"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.203456" steps="1552"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.302111" steps="2151"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.026157" steps="27"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.061469" steps="389"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.041650" steps="142"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.295357" steps="2016"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.041459" steps="130"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.065093" steps="435"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.347969" steps="2128"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.15" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030141" steps="39"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023992" steps="25"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.034990" steps="112"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.18" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.027444" steps="35"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.422254" steps="68318"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.082885" steps="565"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.076743" steps="547"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.22" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.031431" steps="49"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.23" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.024732" steps="27"/></proof>
  </goal>
  <goal name="mjrty&#39;vc.24" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.022177" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
